# Business Day Convention Extraction from Interest Rate Swap Contracts

You are an expert in extracting business day conventions from derivatives contracts. Your task is to identify how dates should be adjusted when they fall on non-business days.

## Task Overview

Create two JSON files with identical structure but different content:

1. **Primary JSON**: Extract business day conventions and populate the specified fields
2. **Secondary JSON**: Provide the exact text snippets from the contract used to make each extraction decision

## Business Day Convention Definitions

Business day conventions determine how to adjust dates that fall on non-business days:
- **MODFOLLOWING**: Move to next business day, unless that crosses into the next month, then move to previous business day
- **FOLLOWING**: Move to next business day
- **PRECEDING**: Move to previous business day  
- **NONE**: Do not adjust the date, even if it falls on a non-business day

## Pattern Recognition Guide

Recognize these common phrasings and map them correctly:

**English Patterns:**
- "Modified Following" → MODFOLLOWING
- "Following Business Day" → FOLLOWING
- "Preceding Business Day" → PRECEDING
- "No Adjustment" / "Unadjusted" → NONE
- "Modified Following Business Day Convention" → MODFOLLOWING

**Spanish Patterns:**
- "Modified Following" / "MOD_FOLLOW" / "MODFOLLOWING" → MODFOLLOWING
- "se ajusta día hábil siguiente del mismo mes" → MODFOLLOWING
- "se ajusta día hábil siguiente" → FOLLOWING
- "se ajusta día hábil anterior" → PRECEDING
- "sin ajuste" / "no se ajusta" → NONE
- "Convención de Días Hábiles" → General business day convention (applies to all unless overridden)

**Chilean Banking Terminology:**
- "Calendario de Cálculo" → Often contains Period End Dates business day conventions that can serve as fallback for main dates
- "Fecha de cierre" → Trade/Start Date field
- "Fecha de inicio" → Effective Date field  
- "Fecha de vencimiento" → Termination Date field

## CRITICAL INSTRUCTION FOR CHILEAN CONTRACTS

**MANDATORY FALLBACK RULE**: If header-level date fields (Trade Date, Effective Date, Termination Date) cannot find specific conventions, you MUST check leg-level "Calendario de Cálculo" sections before setting any field to "N/A". The leg-level conventions serve as valid fallbacks for header-level fields.

**ENFORCEMENT**: If you find "MOD_FOLLOW", "MODFOLLOWING", or Spanish adjustment phrases in ANY leg's "Calendario de Cálculo", you MUST use this as the convention for header-level fields that lack specific conventions. Setting header fields to "N/A" when leg-level conventions exist is an error.

**Example**: If you find "Calendario de Cálculo: SAN, NYC, MOD_FOLLOW" in leg sections but no header-level conventions, the correct output is:
```json
"tradeDate": {
    "businessDayConvention": "MODFOLLOWING",
    "tradeDateBusinessDayConventionClear": false
}
```
NOT:
```json
"tradeDate": {
    "businessDayConvention": "N/A",
    "tradeDateBusinessDayConventionClear": false
}
```

## MANDATORY STOP-ON-FIND RULE

**CRITICAL**: You MUST follow this sequential process and IMMEDIATELY STOP when you find a valid convention. Do NOT continue to check additional sources once you have found a clear answer.

**Enforcement**: If you find a business day convention explicitly stated in Step 1 for any field, you are PROHIBITED from looking at any subsequent steps. Violating this rule is an error.

## Extraction Rules

### Step 1: Identify General Business Day Convention
First, look for a general "Business Day Convention" field, typically found in:
- Header sections
- General terms
- Standard definitions section
- **Spanish contracts**: "Convención de Días Hábiles" field

This serves as the fallback for all specific date fields if no specific convention is found.

### Step 2: Extract Specific Date Conventions - FOLLOW SEQUENCE STRICTLY

**For tradeDateAdjustmentBusinessDayConvention:**
1. Check Trade Date field for explicit business day convention → **IF FOUND: USE IT AND STOP. DO NOT CHECK STEP 2.**
2. If and only if Step 1 yielded nothing: Use general Business Day Convention from Step 1
3. If and only if Steps 1-2 yielded nothing: Leave blank or set to "N/A"

**For effectiveDateAdjustmentBusinessDayConvention:**
1. Check Effective Date field for explicit business day convention → **IF FOUND: USE IT AND STOP. DO NOT CHECK STEP 2.**
2. If and only if Step 1 yielded nothing: Use general Business Day Convention from Step 1  
3. If and only if Steps 1-2 yielded nothing: Leave blank or set to "N/A"

**For terminationDateAdjustmentBusinessDayConvention:**
1. Check Termination Date field for explicit business day convention (e.g., "subject to adjustment in accordance with the Modified Following Business Day Convention") → **IF FOUND: USE IT AND STOP. DO NOT CHECK STEPS 2-3.**
2. If and only if Step 1 yielded nothing: Check Period End Dates sections for each leg
3. If and only if Steps 1-2 yielded nothing: Use general Business Day Convention from Step 1
4. If and only if Steps 1-3 yielded nothing: Leave blank or set to "N/A"

**For leg-level effective and termination date conventions:**
1. Look for leg-specific business day conventions in each leg's documentation
2. If not found, inherit from header-level equivalent field
3. Cross-validate that both legs have consistent conventions where logical

## Validation and Quality Checks

**Prohibited Extraction Sources - DO NOT use these sections:**
- Payment instructions or settlement procedures
- Calculation methodology sections  
- Notice periods or communication procedures
- "Adjustment to Payment Dates and Exchange Dates" sections
- Any section that mentions "business days" without specifying "business day convention"
- **CRITICAL**: Period End Dates sections if you already found a valid convention in the primary date field
- **CRITICAL**: Floating Rate Payer sections if you already found a valid convention in the primary date field

**Confidence Assessment:**
- Set "Clear" boolean to `true` if the convention is explicitly stated in the primary field (Step 1 for any field)
- Set "Clear" boolean to `false` if:
  - The value comes from fallback rules (Steps 2+ for any field)
  - Multiple conflicting conventions are found
  - The value comes from a default rule
  - Any ambiguity exists in the source text
  - **The value was inherited from leg-level conventions for header-level fields**

**Cross-Validation Rules:**
- If both legs specify different conventions for the same date type, flag as potentially ambiguous (Clear = false)
- Verify extracted values are valid enums: MODFOLLOWING, FOLLOWING, PRECEDING, or NONE
- Ensure leg-level conventions are logically consistent with header-level conventions

## Output Requirements

### Primary JSON Format:
```json
{
    "header": {
        "source": "contrato",
        "tradeDate": {
            "businessDayConvention": "[MODFOLLOWING|FOLLOWING|PRECEDING|NONE]",
            "tradeDateBusinessDayConventionClear": "[true|false]"
        },
        "effectiveDate": {
            "businessDayConvention": "[MODFOLLOWING|FOLLOWING|PRECEDING|NONE]", 
            "effectiveDateBusinessDayConventionClear": "[true|false]"
        },
        "terminationDate": {
            "businessDayConvention": "[MODFOLLOWING|FOLLOWING|PRECEDING|NONE]",
            "terminationDateBusinessDayConventionClear": "[true|false]"
        }
    },
    "legs": [
        {
            "effectiveDate": {
                "businessDayConvention": "[MODFOLLOWING|FOLLOWING|PRECEDING|NONE]",
                "effectiveDateBusinessDayConventionClear": "[true|false]"
            },
            "terminationDate": {
                "businessDayConvention": "[MODFOLLOWING|FOLLOWING|PRECEDING|NONE]",
                "terminationDateBusinessDayConventionClear": "[true|false]"
            }
        },
        {
            "effectiveDate": {
                "businessDayConvention": "[MODFOLLOWING|FOLLOWING|PRECEDING|NONE]",
                "effectiveDateBusinessDayConventionClear": "[true|false]"
            },
            "terminationDate": {
                "businessDayConvention": "[MODFOLLOWING|FOLLOWING|PRECEDING|NONE]",
                "terminationDateBusinessDayConventionClear": "[true|false]"
            }
        }
    ]
}
```

### Secondary JSON Format:
Use the same structure but populate each field with the exact contract text snippet used to make the extraction decision. For fields where no specific text was found and default values were used, write: "No specific convention found - used default value"

## Processing Guidelines

**Strict Adherence:**
- Only extract from sections that explicitly mention business day conventions
- Do not guess or infer beyond the specified fallback rules
- If unsure, use the default value and mark Clear as false
- Maintain zero tolerance for extracting from incorrect contract sections

**Error Handling:**
- If contract text is incomplete or corrupted, mark affected fields as unclear (Clear = false)
- If external references are mentioned (e.g., "As per ISDA definitions"), note this in secondary JSON but do not attempt to resolve
- Handle cases where legs have different structures or naming conventions

**Final Validation:**
Before outputting JSON, verify:
- All enum values are spelled correctly and match exactly: MODFOLLOWING, FOLLOWING, PRECEDING, NONE
- All Clear boolean fields contain only `true` or `false`
- JSON structure matches the required schema exactly
- Secondary JSON provides meaningful source attribution for each extracted value

### Contract Text:

{contract_text}
